version: "3.8"

services:
  msa_front:
    container_name: msa_front
    depends_on:
      - msa_api
      - msa_ui
      - camunda
    image: ubiqube/msa2-front:cd9a0e6a7312b798bf8b5becdea5a5e1976a90bb
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 514
        published: 514
        protocol: udp
        mode: host
      - target: 162
        published: 162
        protocol: udp
        mode: host
   #
    # uncomment one of the 2 sections below when installing a custom certificate 
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"
  db:
    container_name: db
    image: ubiqube/msa2-db:37d694d70a8d3a7f30faecce4a91a4215305cf48
    command: postgres -c 'max_connections=800'
    environment:
      POSTGRES_PASSWORD: my_db_password
      POSTGRES_DB: POSTGRESQL
    volumes:
      - "msa_db:/var/lib/postgresql/data"
    ports:
      - 5432:5432

  msa_api:
    container_name: msa_api
    depends_on:
      - db
      - msa_es
    image: ubiqube/msa2-api:06242abdf059b2abe0e0c138fb4a1a5adfcdb401
    entrypoint:
      - /opt/jboss/wildfly/bin/standalone.sh
      - -b
      - 0.0.0.0
      - -bmanagement
      - 0.0.0.0
      - -c
      - ubiqube.xml
    volumes:
      - "msa_api:/opt/ubi-jentreprise/generated/conf"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_dev:/opt/devops/"
      - "msa_api_logs:/opt/jboss/wildfly/standalone/log"
      - "msa_api_logs:/opt/wildfly/logs/processLog"

  msa_ui:
    container_name: msa_ui
    depends_on:
      - msa_api
    image: ubiqube/msa2-ui:2366f539f47e0520408d229367f6f37fb58267c4
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_SCHEDULE_WORKFLOWS=true

  msa_sms:
    container_name: msa_sms
    image: ubiqube/msa2-sms:9578193ef0f63d1bba767c015627b436c35dd829
    depends_on:
      - db
      - msa_es
      - msa_dev
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_sms_logs:/opt/sms/logs"
      - "msa_svn:/opt/svnroot"
    ports:
      - "69:69"

  msa_bud:
    container_name: msa_bud
    depends_on:
      - db
    image: ubiqube/msa2-bud:6449ea6cc905229a8e8b2686cf0b43a81f02e69d
    volumes:
      - "msa_bud_logs:/opt/bud/logs/"

  camunda:
    container_name: camuda
    image: camunda/camunda-bpm-platform:7.13.0

  msa_es:
    container_name: msa_es
    #image: ubiqube/msa2-es:d9899d1f09809a40548f96211984647a8b4901fc
    # use a custom image for compatibility with Filebeat 7.10.1
    image: ubiqube/msa2-es:msa2-es-7.10.1
    environment:
      - "discovery.type=single-node"
      - "script.painless.regex.enabled=true"
      - bootstrap.memory_lock=true
    volumes:
      - "msa_es:/usr/share/elasticsearch/data"

  msa_cerebro:
    container_name: msa_cerebro
    image: lmenezes/cerebro:0.9.2
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa_es:9200
    depends_on:
      - msa_es
    ports:
      - "9000:9000"
  
  msa_kibana:
    container_name: msa_kibana
    image: ubiqube/msa2-kibana:868fb6f9e3b5ab8a5a9a346b93b8779262d9e738
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://msa_es:9200
      ELASTICSEARCH_HOSTS: http://msa_es:9200

  msa_dev:
    container_name: msa_dev
    build: ./lab/msa_dev
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_api:/opt/ubi-jentreprise/generated/conf"
      - "msa_dev:/opt/devops/"
      
  linux_me:
    container_name: linux_me_1
    # use local image for quickstart dev => for release: make sure the chnages are ported to msa-docker and uncomment the line below
    #image: ubiqube/msa2-linuxme
    build: ./lab/linux.me
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2224:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    networks:
      default:
        ipv4_address: 172.20.0.101
    hostname: linux_me
    privileged: true

  linux_me_2:
    container_name: linux_me_2
    # use local image for quickstart dev => for release: make sure the chnages are ported to msa-docker and uncomment the line below
    #image: ubiqube/msa2-linuxme
    build: ./lab/linux.me
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2225:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    networks:
      default:
        ipv4_address: 172.20.0.102
    hostname: linux_me_2
    privileged: true

  # msa log collecting with ELK Filebeat
  msa_fb:
    container_name: msa_fb
    environment:
      - ELASTICSEARCH_HOSTS=msa_es
      - KIBANA_HOST=msa_kibana
    build: ./lab/elk
    volumes:
     - /var/lib/docker/volumes/quickstart_msa_sms_logs/_data:/var/lib/docker/volumes/quickstart_msa_sms_logs/_data:ro
     - /var/lib/docker/volumes/quickstart_msa_api_logs/_data:/var/lib/docker/volumes/quickstart_msa_api_logs/_data:ro
    privileged: true
     
volumes:
  msa_api:
  msa_db:
  msa_dev:
  msa_entities:
  msa_repository:
  msa_es:
  rrd_repository:
  msa_api_logs:
  msa_sms_logs:
  msa_bud_logs:
  msa_front:
  msa_svn:
  msa_fb:

networks:
  default:
    name: quickstart_default
    ipam:
      config:
        - subnet: 172.20.0.0/24

